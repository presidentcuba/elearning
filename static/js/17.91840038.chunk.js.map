{"version":3,"sources":["services/authAPI.js","pages/LoginPage/index.js","actions/auth.js"],"names":["authAPI","login","values","axiosClient","post","register1","schema","yup","shape","taiKhoan","required","min","max","matKhau","LoginPage","dispatch","useDispatch","useSelector","state","auth","userInfo","error","isLoading","location","useLocation","useForm","resolver","yupResolver","register","errors","formState","handleSubmit","control","redirectTo","qs","parse","search","ignoreQueryPrefix","console","log","to","className","onSubmit","a","type","LOGIN_REQUEST","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","response","href","class","placeholder","message"],"mappings":"yHAAA,YAEMA,EAAU,CACZC,MAAO,SAACC,GACJ,OAAOC,IAAYC,KAAK,4BAA6BF,IAGzDG,UAAW,SAACH,GACR,OAAOC,IAAYC,KAAK,yBAA0BF,KAI3CF,O,yNCMTM,EAASC,MAAaC,MAAM,CAChCC,SAAUF,MAEPG,SAAS,0EACTC,IAAI,EAAG,wEACPC,IAAI,GAAI,wEACXC,QAASN,MAAaG,SAAS,6EAGlB,SAASI,IAGtB,IAAMC,EAAWC,cAHiB,EAKIC,aAAa,SAACC,GAAD,OAAWA,EAAMC,QAA5DC,EAL0B,EAK1BA,SAAqBC,GALK,EAKhBC,UALgB,EAKLD,OACvBE,EAAWC,cANiB,EASkCC,YAAQ,CAC1EC,SAAUC,YAAYrB,KADhBsB,EAT0B,EAS1BA,SAAuBC,EATG,EAShBC,UAAaD,OAAUE,EATP,EASOA,aATP,EASqBC,QAWvD,GAAIZ,EAAU,CAAC,IAELa,EAAeC,IAAGC,MAAMZ,EAASa,OAAQ,CAACC,mBAAmB,IAA7DJ,WAGR,OAFAK,QAAQC,IAAIN,GAERA,EACM,cAAC,IAAD,CAAUO,GAAIP,IAEjB,cAAC,IAAD,CAAUO,GAAG,WAGtB,OACE,qBAAKC,UAAU,aAAf,SACE,uBAAMC,SAAUX,GApBA,SAAC7B,GAGnBa,ECzCG,SAAeb,GAClB,8CAAO,WAAOa,GAAP,iBAAA4B,EAAA,6DAEH5B,EAAS,CAAE6B,KAAMC,MAFd,kBAKsB7C,IAAQC,MAAMC,GALpC,gBAKQ4C,EALR,EAKQA,KAEPC,aAAaC,QAAQ,WAAYC,KAAKC,UAAUJ,IAChD/B,EAAS,CAAE6B,KAAMO,IAAeC,QAAS,CAAEN,UAR5C,kDAYC/B,EAAS,CACL6B,KAAMS,IACND,QAAS,CAAE/B,MAAO,KAAMiC,SAASR,QAdtC,0DAAP,sDDwCS7C,CAAMC,OAiBb,UACE,wDACA,qBAAKuC,UAAU,kBAAf,SACI,oBAAGc,KAAK,IAAR,UACE,mBAAGC,MAAM,sBACT,gEAGN,qBAAKf,UAAU,gBAAf,SACE,oBAAGc,KAAK,IAAR,UACE,mBAAGC,MAAM,kBACT,8DAGJ,qBAAKf,UAAU,eAAf,SACE,oBAAGc,KAAK,IAAR,UACE,mBAAGC,MAAM,iBACT,6DAGHnC,EAAQ,qBAAKoB,UAAU,qBAAf,SAAqCpB,IAAe,GAC7D,sBAAKoB,UAAU,+BAAf,UACE,mCAAOG,KAAK,OAAOH,UAAU,eAAegB,YAAY,UAAa7B,EAAS,cAE7EC,EAAOpB,UACN,qBAAKgC,UAAU,qBAAf,SAAqCZ,EAAOpB,SAASiD,aAGvD,sBAAKjB,UAAU,aAAf,UACA,mCAAOG,KAAK,WAAWH,UAAU,eAAegB,YAAY,YAAe7B,EAAS,aAEnFC,EAAOhB,SACN,qBAAK4B,UAAU,qBAAf,SAAqCZ,EAAOhB,QAAQ6C,aAGxD,wBAAQjB,UAAU,2BAAlB,oBACA,sBAAKA,UAAU,+BAAf,UAEE,sCACA,mBAAGc,KAAK,IAAR,oCACA,gCACE,+DACA,cAAC,IAAD,CAAMf,GAAG,YAAT","file":"static/js/17.91840038.chunk.js","sourcesContent":["import axiosClient from \"./axiosClient\";\r\n\r\nconst authAPI = {\r\n    login: (values) => {\r\n        return axiosClient.post(\"/QuanLyNguoiDung/DangNhap\", values);\r\n    },\r\n\r\n    register1: (values) => {\r\n        return axiosClient.post(\"QuanLyNguoiDung/DangKy\", values);\r\n    },\r\n};\r\n\r\nexport default authAPI;","import React, { useRef } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { Input, FormGroup, Label, Alert } from \"reactstrap\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"src/actions/auth\";\r\nimport { Redirect, useLocation } from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport qs from \"qs\";\r\n\r\n// Controlled Component: Control tất cả mọi thứ trên giao diện bằng state, props\r\n// Uncontrolled Component: Control giao diện k thông qua state, props\r\n\r\n// Cả useState lẫn useRef đều dùng để lưu trữ data\r\n// Khác: khi state thay đổi component bị render lại, ref thay đổi component không bị render lại\r\n\r\n// Tạo schame validation\r\nconst schema = yup.object().shape({\r\n  taiKhoan: yup\r\n    .string()\r\n    .required(\"Tài khoản không được để trống\")\r\n    .min(5, \"Tài khoản phải từ 5 đến 20 kí tự\")\r\n    .max(20, \"Tài khoản phải từ 5 đến 20 kí tự\"),\r\n  matKhau: yup.string().required(\"Mật khẩu không được để trống\"),\r\n});\r\n\r\nexport default function LoginPage() {\r\n  // const inpTaiKhoan = useRef();\r\n  // const inpMatKhau = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo, isLoading, error} = useSelector( (state) => state.auth );\r\n  const location = useLocation();\r\n\r\n  // sử dụng khi UI component không hỗ register \r\n  const { register, formState: { errors }, handleSubmit, control, } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    // console.log(inpTaiKhoan.current.value);\r\n    // console.log(inpMatKhau.current.value);\r\n    dispatch(login(values));\r\n  };\r\n\r\n  // NẾu userInfo có data => chuyển trang về home\r\n  if (userInfo) {\r\n\r\n    const { redirectTo } = qs.parse(location.search, {ignoreQueryPrefix: true, });\r\n    console.log(redirectTo)\r\n\r\n    if (redirectTo) {\r\n       return <Redirect to={redirectTo} />;\r\n    }\r\n    return <Redirect to=\"/admin\" />;    \r\n  }\r\n\r\n  return (\r\n    <div className=\"form-login\">\r\n      <form onSubmit={handleSubmit(handleLogin)}>\r\n        <p>Log In To Your Account!</p>\r\n        <div className=\"login__facebook\">\r\n            <a href=\"#\">\r\n              <i class=\"fab fa-facebook-f\"></i>\r\n              <span> Continue with Facebook</span>\r\n            </a>\r\n        </div>\r\n        <div className=\"login__google\">\r\n          <a href=\"#\">\r\n            <i class=\"fab fa-google\"></i>\r\n            <span> Continue with Google</span>\r\n          </a>\r\n        </div>\r\n        <div className=\"login__Apple\">\r\n          <a href=\"#\">\r\n            <i class=\"fab fa-apple\"></i>\r\n            <span> Continue with Apple</span>\r\n          </a>\r\n        </div>\r\n        {error ? <div className=\"alert alert-danger\">{error}</div> : \"\"}\r\n        <div className=\"form-group form-group__email\">\r\n          <input type=\"text\" className=\"form-control\" placeholder=\"E-mail\" {...register(\"taiKhoan\")}/>\r\n          \r\n          {errors.taiKhoan && (\r\n            <div className=\"alert alert-danger\">{errors.taiKhoan.message}</div>\r\n          )}\r\n        </div>\r\n          <div className=\"form-group\">\r\n          <input type=\"password\" className=\"form-control\" placeholder=\"Password\" {...register(\"matKhau\")}/>\r\n\r\n          {errors.matKhau && (\r\n            <div className=\"alert alert-danger\">{errors.matKhau.message}</div>\r\n          )}\r\n        </div>\r\n        <button className=\"btn btn-danger btn-login\">Log In</button>\r\n        <div className=\"forgot__password text-center\">\r\n         \r\n          <span>or</span>\r\n          <a href=\"#\"> Forgot your password.</a>\r\n          <div>\r\n            <span>You do not have an account?</span>\r\n            <Link to=\"/register\"> Sign up</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import {LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE} from \"../constants/auth\"\r\nimport authAPI from \"../services/authAPI\";\r\nexport function login(values) {\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: LOGIN_REQUEST });\r\n        try {\r\n\r\n            const {data} = await authAPI.login(values);\r\n            //Lưu thông tin user xuống localStorage\r\n            localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n            dispatch({ type: LOGIN_SUCCESS, payload: { data }})\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch({\r\n                type: LOGIN_FAILURE,\r\n                payload: { error: error.response.data }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}