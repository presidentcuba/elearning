{"version":3,"sources":["services/usersAPI.js","pages/AdminListUser/index.js","actions/users.js","actions/deleteUserAdmin.js","actions/updateUserAdmin.js"],"names":["usersAPI","getUsers","axiosClient","get","getUsersByCategory","category","params","maDanhMuc","maNhom","deleteUsers","taiKhoan","delete","addUsers","values","post","updateUsers","put","getUser","AdminListUser","useParams","dispatch","useDispatch","users","useSelector","state","status","updateUser","useState","modal","setModal","toggle","hoTen","email","soDt","matKhau","maLoaiNguoiDung","newSelectData","setNewSelectData","searchTerm","setSearchTerm","console","log","useEffect","a","type","GET_USERS_REQUEST","data","GET_USERS_SUCCESS","payload","GET_USERS_FAILURE","error","response","searchData","filter","value","toLowerCase","includes","toLocaleLowerCase","handleChange","event","newData","target","name","handleDelete","window","confirm","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","handleUpdate","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","className","action","onChange","map","item","key","data-label","onClick","user","newValueEdit","handleEdit","class","Modal","isOpen","style","fontSize","color","onSubmit","htmlFor","placeholder","disabled","id"],"mappings":"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","file":"static/js/16.b6da2aa1.chunk.js","sourcesContent":["import axiosClient from \"./axiosClient\";\r\n\r\nconst usersAPI = {\r\n    // Lấy user mã nhóm GP09\r\n    getUsers: () => {\r\n        return axiosClient.get(\"/QuanLyNguoiDung/LayDanhSachNguoiDung?MaNhom=GP09\");\r\n       \r\n       \r\n    },\r\n\r\n    getUsersByCategory: (category) => {\r\n        const params = { \r\n          maDanhMuc: category,\r\n          maNhom: \"GP09\",\r\n        };\r\n    \r\n        return axiosClient.get(\"/QuanLyNguoiDung/TimKiemNguoiDung\", { params });\r\n    },\r\n\r\n    // Xóa user\r\n    deleteUsers: (taiKhoan) => {\r\n     \r\n      return axiosClient.delete(`/QuanLyNguoiDung/XoaNguoiDung?TaiKhoan=${taiKhoan}`);\r\n\r\n    },\r\n\r\n    // Thêm user\r\n    addUsers: (values) => {\r\n      return axiosClient.post(\"/QuanLyNguoiDung/ThemNguoiDung\", values);\r\n    },\r\n\r\n    // Cập nhật thông tin người dùng\r\n    updateUsers: (values) => {\r\n      return axiosClient.put(\"/QuanLyNguoiDung/CapNhatThongTinNguoiDung\", values);\r\n    },\r\n    \r\n    //Lấy user\r\n    getUser: (taiKhoan) => {\r\n      // return axiosClient.post(\"/QuanLyNguoiDung/ThongTinNguoiDung\", userId);\r\n      \r\n      return axiosClient.get(`/QuanLyNguoiDung/TimKiemNguoiDung?MaNhom=GP09&tuKhoa=${taiKhoan}`);\r\n      // http://elearning0706.cybersoft.edu.vn/api/QuanLyNguoiDung/TimKiemNguoiDung?MaNhom={MaNhom}&tuKhoa={tenNguoiDung}\r\n\r\n    },\r\n\r\n    \r\n}\r\n\r\nexport default usersAPI;","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router';\r\nimport { getUsersByCategory } from 'src/actions/users';\r\nimport { deleteUserAdmin } from 'src/actions/deleteUserAdmin';\r\nimport { updateUserAdmin } from 'src/actions/updateUserAdmin';\r\nimport {Button, Modal} from \"reactstrap\"\r\nexport default function AdminListUser() {\r\n    const { category } = useParams();\r\n    const dispatch = useDispatch();\r\n    const { users } = useSelector((state) => state.users);\r\n    const { status } = useSelector((state) => state.updateUser);\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [newSelectData, setNewSelectData] = useState({\r\n        taiKhoan: \"\",\r\n        hoTen: \"\",\r\n        email: \"\",\r\n        soDt: \"\",\r\n        matKhau: \"\",\r\n        maLoaiNguoiDung: \"\",\r\n        maNhom: \"GP09\",\r\n    });\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n console.log(status);\r\n\r\n\r\n    useEffect((category) => {\r\n        dispatch(getUsersByCategory(category));\r\n       \r\n    }, [category]);\r\n\r\n    const handleEdit = (user) => {\r\n        setModal(!modal);\r\n        console.log(modal);\r\n        const newValueEdit = {\r\n            taiKhoan: user.taiKhoan,\r\n            hoTen: user.hoTen,\r\n            email: user.email,\r\n            soDt: user.soDt,\r\n            matKhau: \"\",\r\n            maLoaiNguoiDung: user.maLoaiNguoiDung,\r\n            maNhom: \"GP09\",\r\n        }\r\n        setNewSelectData(newValueEdit);\r\n    }\r\n    const onChange = (event) => {\r\n        const target = event.target.value;\r\n        setSearchTerm(target);\r\n    }\r\n    const searchData = users.filter((value) => {\r\n        if(searchTerm === \"\") {\r\n            return value;\r\n        }\r\n        else if (value.taiKhoan.toLowerCase().includes(searchTerm.toLocaleLowerCase())) {\r\n            return value;\r\n        }\r\n    })\r\n    console.log(searchData);\r\n    const handleChange = (event) => {\r\n        const newData = {...newSelectData};\r\n        newData[event.target.name] = event.target.value;\r\n        setNewSelectData(newData);\r\n    }\r\n    const handleDelete = (values) => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            dispatch(deleteUserAdmin(values));\r\n            \r\n        }\r\n    }\r\n    const handleUpdate = () => {\r\n        dispatch(updateUserAdmin(newSelectData));\r\n    }\r\n    return (\r\n        <div className=\"admin-listsuser admin-data\">\r\n            <h3 className=\"admin-title py-3\">USER MANAGE</h3>\r\n        <div className=\"admin-content\">\r\n            <div className=\"table-header\">\r\n                <form className=\"form-group\"  action=\"\">\r\n                    <span>Search:</span>\r\n                    <input className=\"form-control\" onChange = {onChange} type=\"text\" />\r\n                </form>\r\n            </div>\r\n            <div className=\"table-body\">\r\n                <table className=\"admin-table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Id</td>\r\n                            <td>User Name</td>\r\n                            <td>Name</td>\r\n                            <td>Email</td>\r\n                            <td>Phone Number</td>\r\n                            <td>User Type</td>\r\n                            <td>Handle</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {searchData.map((item, key) => {\r\n                            return (\r\n                                <tr key={key}>\r\n                                    <td data-label=\"Id\" className=\"id\">\r\n                                        {key + 1}\r\n                                    </td>\r\n                                    <td data-label=\"User Name\">{item.taiKhoan}</td>\r\n                                    <td data-label=\"User Name\">{item.hoTen}</td>\r\n                                    <td data-label=\"Email\">{item.email}</td>\r\n                                    <td data-label=\"Phone Number\">{item.soDt}</td>\r\n                                    <td data-label=\"User Type\">{item.maLoaiNguoiDung}</td>\r\n                                    <td data-label=\"Handel\">\r\n                                        <button onClick={toggle} onClick={ ()=> handleEdit(item)} className=\"btn btn-primary mr-2\">\r\n                                            <i class=\"far fa-edit\"></i>\r\n                                        </button>\r\n                                        <button onClick={ () => handleDelete(item.taiKhoan)} className=\"btn btn-danger\">\r\n                                            <i class=\"far fa-trash-alt\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            {/* <div className=\"table-footer\">\r\n                <div className=\"table-footer__content\">\r\n                    <button className={`btn-pagenation ${pagenation === 1 ? \"active\" : \"\"}`} onClick={() => setPagenation(1)}>\r\n                        1\r\n                    </button>\r\n                    <button className={`btn-pagenation ${pagenation === 2 ? \"active\" : \"\"}`} onClick={() => setPagenation(2)}>\r\n                        2\r\n                    </button>\r\n                    <button className={`btn-pagenation ${pagenation === 3 ? \"active\" : \"\"}`} onClick={() => setPagenation(3)}>\r\n                        3\r\n                    </button>\r\n                    <button className={`btn-pagenation ${pagenation === 4 ? \"active\" : \"\"}`} onClick={() => setPagenation(4)}>\r\n                        4\r\n                    </button>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n        <Modal className=\"admin-edit-user\" isOpen={modal} toggle={toggle}>\r\n                <div className=\"form-group d-flex justify-content-between\">\r\n                    <h5 className=\"w-100 text-center\">Update User</h5>\r\n                    <span style={{ fontSize: \"12px\", color: \"green\" }}>{status}</span>\r\n                </div>\r\n            <form className=\"px-3\" onSubmit={ () => handleUpdate()}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">User Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"User Name\"\r\n                        name=\"taiKhoan\"\r\n                        value={newSelectData.taiKhoan}\r\n                        onChange={handleChange}\r\n                        disabled\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Password\"\r\n                        name=\"matKhau\"\r\n                        value={newSelectData.matKhau}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Full Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Full Name\"\r\n                        name=\"hoTen\"\r\n                        value={newSelectData.hoTen}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Phone Number</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Phone Number\"\r\n                        name=\"soDt\"\r\n                        value={newSelectData.soDt}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">User Type</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"User Type\"\r\n                        name=\"maLoaiNguoiDung\"\r\n                        value={newSelectData.maLoaiNguoiDung}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Group Id</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Group Id\"\r\n                        value=\"GP09\"\r\n                        name=\"maNhom\"\r\n                        value={newSelectData.maNhom}\r\n                        onChange={handleChange}\r\n                        disabled\r\n                        \r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        // placeholder={newSelectData.email}\r\n                        name=\"email\"\r\n                        value={newSelectData.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text\" style={{ color: \"red\" }}></small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary mb-3\">\r\n                    Submit\r\n                </button>\r\n                <button onClick={toggle} type=\"button\" className=\"btn btn-danger mb-3\" >\r\n                    Cancel\r\n                </button>\r\n            </form>\r\n        </Modal>\r\n       \r\n    </div>\r\n    );\r\n}\r\n","import {\r\n    GET_USERS_REQUEST,\r\n    GET_USERS_SUCCESS,\r\n    GET_USERS_FAILURE,\r\n  } from \"../constants/users\";\r\n  \r\n  import usersAPI from \"../services/usersAPI\";\r\n  \r\n  export function getUsersByCategory(category) {\r\n    return async (dispatch) => {\r\n      dispatch({ type: GET_USERS_REQUEST });\r\n  \r\n      try {\r\n        const { data } = await usersAPI.getUsersByCategory(category);\r\n  \r\n        dispatch({ type: GET_USERS_SUCCESS, payload: { data } });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: GET_USERS_FAILURE,\r\n          payload: { error: error.response.data },\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  ","import { DELETE_USER_FAILURE, DELETE_USER_SUCCESS, DELETE_USER_REQUEST } from \"../constants/deleteUserAdmin\";\r\n\r\nimport usersAPI from \"../services/usersAPI\";\r\n\r\nexport function deleteUserAdmin(taiKhoan) {\r\n    return async (dispatch) => {\r\n        dispatch({ type: DELETE_USER_REQUEST });\r\n        try {\r\n            const { data } = await usersAPI.deleteUsers(taiKhoan);\r\n            dispatch({ type: DELETE_USER_SUCCESS, payload: {taiKhoan}});\r\n        } catch (error) {\r\n            dispatch({ type: DELETE_USER_FAILURE, payload: { error: error.response.data}});\r\n        }\r\n    }\r\n}\r\n","\r\nimport {\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAILURE,\r\n} from \"../constants/updateUserAdmin.js\";\r\nimport usersAPI from \"../services/usersAPI.js\";\r\n\r\n\r\nexport function updateUserAdmin(values) {\r\n    return async (dispatch) => {\r\n        dispatch({ type: UPDATE_USER_REQUEST });\r\n        try {\r\n\r\n            const status = \"Update user success!!\";\r\n            const {data} = await usersAPI.updateUsers(values);\r\n            dispatch({ type: UPDATE_USER_SUCCESS, payload: {data, status}});\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: UPDATE_USER_FAILURE,\r\n                payload: {error: error.response.data},\r\n            })\r\n        }\r\n    }\r\n}"],"sourceRoot":""}